Step 1

import { Header,Icon,Badge } from 'react-native-elements';

 <Header
          leftComponent={<Icon name='bars' type='font-awesome' color='#696969'  onPress={() => this.props.navigation.toggleDrawer()}/>}
          centerComponent={{ text: this.props.title, style: { color: '#90A5A9', fontSize:20,fontWeight:"bold", } }}
         
          backgroundColor = "#eaf8fe"
        />
-----------------------------------------------------------

Step 2

rightComponent= {<Icon name='bell' type='font-awesome' color='#696969'  onPress={() => props.navigation.navigate('Notification')}/>}

---------------------------------
Step 3

const BellIconWithBadge=(props)=>{
  return(
    <View>
      <Icon name='bell' type='font-awesome' color='#696969' size={25}
        onPress={() =>props.navigation.navigate('Notification')}/>
       <Badge
        value="1"
       containerStyle={{ position: 'absolute', top: -4, right: -4 }}/>
    </View>
  )
}

 rightComponent= {<BellIconWithBadge {...props} />}

----------------------------------------------
Step 4

import db from '../config'

export default class MyHeader extends Component{
constructor(props){
  super(props)
  this.state={
    value:""
  }
}

BellIconWithBadge=()=>{
  return(
    <View>
      <Icon name='bell' type='font-awesome' color='#696969' size={25}
        onPress={() =>this.props.navigation.navigate('Notification')}/>
       <Badge
        value={this.state.value}
       containerStyle={{ position: 'absolute', top: -4, right: -4 }}/>
    </View>
  )
}

render(){
  return(
      <Header
        leftComponent={<Icon name='bars' type='font-awesome' color='#696969'  onPress={() => this.props.navigation.toggleDrawer()}/>}
        centerComponent={{ text: this.props.title, style: { color: '#90A5A9', fontSize:20,fontWeight:"bold", } }}
        rightComponent={<this.BellIconWithBadge {...this.props}/>}
        backgroundColor = "#eaf8fe"
      />

)
}

}
------------------------------------------
Step 5
getNumberOfUnreadNotifications(){
  db.collection('all_notifications').where('notification_status','==',"unread")
  .onSnapshot((snapshot)=>{
    var unreadNotifications = snapshot.docs.map((doc) => doc.data())
    this.setState({
      value: unreadNotifications.length
    })
  })
}

componentDidMount(){
  this.getNumberOfUnreadNotifications()
}

